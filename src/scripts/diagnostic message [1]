error[E0277]: `?` couldn't convert the error to `std::io::Error`
  --> src/scripts/generate_comparison_data.rs:25:26
   |
18 | fn read_metadata(sequence_database_file_name: &String) -> Result<(usize, (usize, usize))> {
   |                                                           ------------------------------- expected `std::io::Error` because of this
...
25 |         .unwrap().parse()?;
   |                          ^ the trait `From<ParseIntError>` is not implemented for `std::io::Error`
   |
   = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
   = help: the following other types implement trait `From<T>`:
             <std::io::Error as From<getrandom::error::Error>>
             <std::io::Error as From<rand_core::error::Error>>
             <std::io::Error as From<csv::Error>>
             <std::io::Error as From<NulError>>
             <std::io::Error as From<std::io::IntoInnerError<W>>>
             <std::io::Error as From<std::io::ErrorKind>>
   = note: required for `Result<(usize, (usize, usize)), std::io::Error>` to implement `FromResidual<Result<Infallible, ParseIntError>>`

